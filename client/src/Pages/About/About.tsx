import React from 'react';
import cn from "classnames";
import "./About.less";
import ReactMarkdown from 'react-markdown'

const markdown = `
## ***Мотивация***

    Мне уже надоело записывать в Slack самому себе то, сколько часов я проработал. Более того, иногда возникают ситуации, когда часы
    работы разбросаны по всему дню. Например, поработал утром, потом прервался и пошел делать уроки, затем снова возобновил рабочий день. 

    Также я не могу наглядно увидеть, сколько я недоработал или переработал, да и вообще никакой статистики нет. 

## ***Идея***

    Хочется создать такой сервис, который бы умел аккумулировать эту информацию, предоставлять более удобный интерфейс и как-то обрабатывать данные.
    
    Хочется более удобно, без ввода данных о рабочих часах, уметь заносить эту информацию. Например, чтобы были две кнопочки - [ПРИСТУПИЛ] + [ПРЕКРАТИЛ],
    в каком-нибудь телеграмм боте, а может быть что-то поудобнее. 
    
    Если просто, то хочется без затрат на заполнения получить аггрегатор рабочего времени с разными плюшками: отчеты о переработке/недоработке, отчеты о заработке
    (актуально для плавающей ставки), возможно более оптимальное время работы (прикольно для соблюдения work-life баланса) 

## ***Функциональность***

    Зеленый - маст хэв фича
    
    Желтый - хотелось бы, чтобы такая фича была
    
    Красный - необязательная фича, может отнять много времени

    1. У каждого пользователя есть внутренний аккаунт (далее, пользователь == аккаунт)
    2. Пользователь может создать Пространство. 
    Пространство - сущность, которая хранит данные о времени, затраченном на него самого.
    Так. можно создать пространство “Работа”, и оно будет хранить данные о том, сколько часов было потрачено на работу.
    3. Пользователь может начать и закончить *Запись времени* в Пространстве. 
    Под этим подразумевается фиксация времени в момент использования этой функциональности. Фиксация отправляется в бд
    4. Пользователь может посмотреть статистику по времени в данном пространстве. 
        1. Кол-во времени за день/неделю/месяц/условный промежуток
        2. Сравнить с каким-то условным временем
        3. Просмотреть историю фиксаций за день/неделю/месяц/условный промежуток
    5. Пользователь может сравнить статистику по всем пространствам. 
    Например, на что было потрачено времени больше всего.
    6. Пользователь может корректировать фиксацию после ее совершения. Например, вырезать кусок времени или добавить его
    7. Пользователь может взаимодействовать с сервисом через telegram-бота и через сайт.
    8. Пользователь может сгенерировать отчет о фиксациях времени за определенный период в нескольких форматах - текстовый, pdf, exel и т.п.
    9. Пользователь может задать промежутки времени, которые он хочет фиксировать автоматически, и ему не нужно
    будет предпринимать какие-то действия - фиксация начнется автоматически, но прервать ее можно.
    10. Пользователь может назначить себе уведомление, если он не выполнил план по пространству. Т.е. если время, потраченное на него недостаточно большое.

### ***Декомпозиция***
    1. Продумать архитектуру: модельки и взаимодействия с ними
    2. Создать модельки. Подключить ОРМ и настроить PostgreSQL
    3. Реализовать пользователей. Авторизация
    4. Написать CRUD для Пространств/Activities
    5. Написать CRUD для Фиксаций времени
    6. Написать агрегации для Фиксаций времени и Пространств
    7. Добавить WEB UI
    8. Добавить Telegram Bot
    9. Деплой сервера, WEB UI, Telegram Bot

## ***Зачем писать что-то своё***

Конечно, можно было бы обойтись какой-нибудь табличкой в гугл доке или в эксель, но мне, например, не хочется вписывать туда начало и конец рабочего времени, лично мне хочется, чтобы цифры генерировались сами, а я только кнопочку нажимал. Более того, было бы еще круче, если бы нажимать ничего не приходилось.
`

const About = () => (
    <div className={cn("about")}>
        <ReactMarkdown children={markdown}/>
    </div>
);

export default About;
